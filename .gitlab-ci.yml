image: docker:latest

stages:
  - test
  - deploy heroku
  - deploy coverage
variables:
  # use the overlay storage driver
  # https://docs.gitlab.com/ce/ci/docker/using_docker_build.html#using-the-overlayfs-driver
  DOCKER_DRIVER: overlay2
#
test:
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  only:
    - master
    - merge_requests
    - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
    - docker-compose build
    - docker-compose up -d
    - docker-compose exec -T rails rake db:create
    - docker-compose exec -T rails rake db:migrate
  script:
    - docker-compose exec -T rails rspec
  artifacts:
    paths:
      - "volume/tasks-manager/coverage/"
    name: "Pipeline $CI_PIPELINE_ID Coverage Report"

deploy:
  stage: deploy heroku
  # only:
    # - master
    # - merge_requests
    # - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add curl nodejs bash git
    -  curl https://cli-assets.heroku.com/install.sh | sh
    - docker build .
  script:
    -  heroku container:login
    - heroku git:remote -a $HEROKU_APP_STAGING
    - echo $HEROKU_APP_STAGING
    - heroku container:push web
    - heroku container:release web
    - heroku run rails db:migrate
    - heroku run rails db:seed
  after_script:
    - curl -sSf "https://$HEROKU_APP_STAGING.herokuapp.com" > curl_output
    - grep "Yay! You&rsquo;re on Rails" curl_output
    # if echo display value different from 0 it is a error
    - echo $?
pages:
  stage: deploy coverage
  only:
    - master
    - merge_requests
    - external_pull_requests
  dependencies:
    - test
  script:
    - mv volume/tasks-manager/coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
