image: docker:latest

stages:
  - test
  - deploy
  - test deploy
variables:
  # use the overlay storage driver
  # https://docs.gitlab.com/ce/ci/docker/using_docker_build.html#using-the-overlayfs-driver
  DOCKER_DRIVER: overlay2
#
tasks_manager_core test:
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  only:
    - master
    - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
    - docker-compose build tasks_manager_core
    - docker-compose up -d tasks_manager_core
    - docker-compose exec -T tasks_manager_core rake db:create db:migrate
  script:
    - docker-compose exec -T tasks_manager_core rspec
  artifacts:
    paths:
      - "volume/tasks-manager-core/coverage/"
    name: "Pipeline tasks_manager_core $CI_PIPELINE_ID Coverage Report"

auth_provider test:
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  only:
    - master
    - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
    - docker-compose build auth_provider
    - docker-compose up -d auth_provider
    - docker-compose exec -T auth_provider rake db:create db:migrate
  script:
    - docker-compose exec -T auth_provider rspec

  artifacts:
    paths:
      - "volume/auth-provider/coverage/"
    name: "Pipeline auth_provider $CI_PIPELINE_ID Coverage Report"

api_gateway test:
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  only:
    - master
    - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
    - docker-compose build api_gateway
  script:
    - docker-compose run -T api_gateway rspec
  artifacts:
    paths:
      - "volume/api-gateway/coverage/"
    name: "Pipeline api_gateway $CI_PIPELINE_ID Coverage Report"

deploy heroku:
  stage: deploy
  only:
    - master
    - external_pull_requests
  services:
    - docker:dind
  before_script:
    - apk add curl nodejs bash git
    - â€Šcurl https://cli-assets.heroku.com/install.sh | sh
    - docker build .
  script:
    - docker build -f Dockerfile -t registry.heroku.com/edimossilva-task-manager/tasks-manager-core .
    - docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
    - docker push registry.heroku.com/edimossilva-task-manager/tasks-manager-core
    - heroku container:login
    - heroku git:remote -a $HEROKU_APP_STAGING
    - heroku container:release web
    - heroku run rails db:migrate db:seed --app=$HEROKU_APP_STAGING

test deploy heroku:
  image: curlimages/curl
  only:
    - master
    - external_pull_requests
  stage: test deploy
  script:
    - curl -s "https://edimossilva-task-manager.herokuapp.com/apipie" | grep -q "half minute and a half"

pages:
  stage: deploy
  only:
    - master
    - external_pull_requests
  dependencies:
    - tasks_manager_core test
    - auth_provider test
    - api_gateway test
  script:
    - ls public
    - mv volume/tasks-manager-core/coverage/* public
    - cp public/index.html public/tasks_manager_core_coverage.html
    - cp volume/auth-provider/coverage/index.html public/auth_provider_coverage.html
    - cp volume/api-gateway/coverage/index.html public/api_gateway_coverage.html
    - cp pages/index.html public/index.html
  artifacts:
    paths:
      - public
    expire_in: 100 days
