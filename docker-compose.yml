version: "3"
services:
  db:
    image: postgres:alpine
    container_name: db
    volumes:
      - /data/docker/postgresql/data:/var/lib/postgresql/data
      - /data/docker/postgresql/data/pgdata
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"

  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    env_file:
      - config/environment/shared_environment.env

  message_broker:
    image: "rabbitmq:3.8-management-alpine"
    container_name: message_broker
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - config/environment/shared_environment.env

  tasks_manager_core:
    build:
      context: "./volume/tasks-manager-core"
      dockerfile: "Dockerfile_tasks_manager_core"
    container_name: tasks_manager_core
    volumes:
      - ./volume/tasks-manager-core:/app
    depends_on:
      - db
    tty: true
    command: rails s -b 0.0.0.0
    ports:
      - "3000:3000"
    env_file:
      - config/environment/shared_environment.env

  auth_provider:
    build:
      context: "./volume/auth-provider"
      dockerfile: "Dockerfile_auth_provider"
    container_name: auth_provider
    volumes:
      - ./volume/auth-provider:/app
    depends_on:
      - db
    tty: true
    command: rails s -b 0.0.0.0
    ports:
      - "3001:3000"
    env_file:
      - config/environment/shared_environment.env

  api_gateway:
    build:
      context: "./volume/api-gateway"
      dockerfile: "Dockerfile_api_gateway"
    container_name: api_gateway
    ports:
      - "3002:9393"
    command: shotgun config.ru -o 0.0.0.0
    env_file:
      - config/environment/shared_environment.env
    volumes:
      - ./volume/api-gateway:/app

  web_client:
    build:
      context: "./volume/tasks-manager-client"
      dockerfile: "Dockerfile_tasks_manager_client"
    container_name: web_client
    ports:
      - "4200:4200"
    command: ng serve --host 0.0.0.0 --disable-host-check
    volumes:
      - ./volume/tasks-manager-client:/app
      - /app/node_modules
  # cypress:
  #   image: "cypress/included:4.5.0"
  #   container_name: cypress
  #   volumes:
  #     - ./volume/tasks-manager-client:/app
  #   working_dir: /app
  #   entrypoint: cypress run --reporter mochawesome
# docker-compose build
# docker-compose up -d
# docker-compose exec tasks_manager_core rake db:create db:migrate db:seed
# docker-compose exec auth_provider rake db:create db:migrate db:seed
# docker-compose exec tasks_manager_core rspec
# localhost:3000
