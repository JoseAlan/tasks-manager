version: "3"
services:
  db:
    image: postgres
    container_name: db
    volumes:
      - ./config/postgres-data:/var/lib/postgresql/data

    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5432:5432"

  message_broker:
    image: "rabbitmq:3.8-management-alpine"
    container_name: message_broker
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_USER}
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - config/environment/shared_environment.env

  rails:
    build:
      context: "."
      dockerfile: "Dockerfile_rails"
    container_name: rails
    volumes:
      - ./volume/tasks-manager:/app
    depends_on:
      - db
      # - message_broker
    environment:
      RUBYOPT: "-W:no-deprecated -W:no-experimental"
      RAILS_MASTER_KEY: "${RAILS_MASTER_KEY}"
      CLOUDAMQP_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@message_broker/${RABBITMQ_DEFAULT_USER}"
      DATABASE_URL: "postgres://db"
      NEW_RELIC_KEY: "${NEW_RELIC_KEY}"
    tty: true
    command: rails s -b 0.0.0.0
    ports:
      - "3000:3000"
    env_file:
      - config/environment/shared_environment.env
# docker-compose build
# docker-compose up -d
# docker-compose exec rails rake db:create
# docker-compose exec rails rake db:migrate
# docker-compose exec rails rake db:seed
# docker-compose exec rails rspec
# localhost:3000
